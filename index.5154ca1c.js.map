{"mappings":"AAAA,MAAMA,EAAaC,SAASC,cAAc,WACpCC,EAAaF,SAASC,cAAc,cACpCE,EAAOH,SAASC,cAAc,YAC9BG,EAAgBJ,SAASC,cAAc,sBAE7CF,EAAWM,iBAAiB,SAE5B,WAEED,EAAcE,mBAAmB,YADlB,sC,IAIjBJ,EAAWG,iBAAiB,UAE5B,SAAqBE,GACnBA,EAAMC,iBACN,MAAMC,EAAO,IAAIC,SAASH,EAAMI,gBAkBlCC,eAA4BC,GAE1B,MAAMC,EAAYD,EAAIE,KAAIH,MAAMI,IAC9B,MAAMC,QAAiBC,MAAM,uCAAuCF,KACpE,IAAKC,EAASE,GACZ,MAAM,IAAIC,MAEZ,OAAOH,EAASI,MAAM,IAGlBZ,QAAaa,QAAQC,WAAWT,GAKtC,OAJmBL,EAChBe,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBV,KAAI,EAACW,MAAEA,KAAYA,EAAM,I,EA1B5BC,CAJYlB,EACTmB,OAAO,WACPJ,QAAOR,GAAQA,IACfD,KAAIC,GAAQA,EAAKa,UAEjBC,MAAKlB,MAAMK,IACV,MAAMc,EAAWd,EAASF,KAAI,EAACiB,QAAEA,KAAcA,EAAQ,KACjDC,QA4BZrB,eAA0BC,GACxB,MAAMqB,EAAW,+BACXC,EAAU,kCAEVrB,EAAYD,EAAIE,KAAIH,MAAMwB,IAC9B,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,IAAKJ,EACLK,EAAGJ,EACHK,KAAM,OAGFxB,QAAiBC,MAAM,GAAGgB,kBAAyBG,KACzD,IAAKpB,EAASE,GACZ,MAAM,IAAIC,MAAMH,EAASyB,YAE3B,OAAOzB,EAASI,MAAM,IAElBZ,QAAaa,QAAQC,WAAWT,GAKtC,OAJgBL,EACbe,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBV,KAAI,EAACW,MAAEA,KAAYA,G,CAhDWiB,CAAWZ,GACxC5B,EAAKyC,UAoDX,SAAsB/B,GACpB,OAAOA,EACJE,KACC,EACE8B,SAASC,OACPA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,IAErBC,UAAUC,QAAEA,EAAOC,KAAEA,OALvB,IAoBDC,KAAK,G,CA3EaC,CAAarB,EAAe,IAE9CsB,OAAMC,GAAKC,QAAQC,IAAIF,KACvBG,SAAQ,KACPvD,EAAcwC,UAAYgB,OAC1B1D,EAAW2D,OAAO,G","sources":["src/task/task.js"],"sourcesContent":["const addCountry = document.querySelector('.js-add');\nconst searchForm = document.querySelector('.js-search');\nconst list = document.querySelector('.js-list');\nconst formContainer = document.querySelector('.js-form-container');\n\naddCountry.addEventListener('click', handlerAddInput);\n\nfunction handlerAddInput() {\n  const markup = `<input type=\"text\" name=\"country\"/>`;\n  formContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nsearchForm.addEventListener('submit', handlerFrom);\n\nfunction handlerFrom(event) {\n  event.preventDefault();\n  const data = new FormData(event.currentTarget);\n  const arr = data\n    .getAll('country')\n    .filter(item => item)\n    .map(item => item.trim());\n  getCountries(arr)\n    .then(async response => {\n      const capitals = response.map(({ capital }) => capital[0]);\n      const weatherService = await getWeather(capitals);\n      list.innerHTML = createMarkup(weatherService);\n    })\n    .catch(e => console.log(e))\n    .finally(() => {\n      formContainer.innerHTML = markup;\n      searchForm.reset();\n    });\n}\n\nasync function getCountries(arr) {\n  // паралельный запрос\n  const responses = arr.map(async item => {\n    const response = await fetch(`https://restcountries.com/v3.1/name/${item}`);\n    if (!response.ok) {\n      throw new Error();\n    }\n    return response.json();\n  });\n\n  const data = await Promise.allSettled(responses);\n  const countryObj = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value[0]);\n\n  return countryObj;\n}\n\nasync function getWeather(arr) {\n  const BASE_URL = 'http://api.weatherapi.com/v1';\n  const API_KEY = 'ce2cb9b2a3da414bb5b172546231704';\n\n  const responses = arr.map(async city => {\n    const params = new URLSearchParams({\n      key: API_KEY,\n      q: city,\n      lang: 'uk',\n    });\n\n    const response = await fetch(`${BASE_URL}/current.json?${params}`);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  });\n  const data = await Promise.allSettled(responses);\n  const objects = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value);\n\n  return objects;\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        current: {\n          temp_c,\n          condition: { text, icon },\n        },\n        location: { country, name },\n      }) => {\n        `<li>\n\n      <div>\n        <h2>${country}</h2>\n        <h3>${name}</h3>\n      </div>\n      <img src=\"${icon}\" alt=\"${text}\">\n      <p>${text}</p>\n      <p>${temp_c}</p>\n\n      </li>`;\n      }\n    )\n    .join('');\n}\n"],"names":["$511287ff32316ba1$var$addCountry","document","querySelector","$511287ff32316ba1$var$searchForm","$511287ff32316ba1$var$list","$511287ff32316ba1$var$formContainer","addEventListener","insertAdjacentHTML","event","preventDefault","data","FormData","currentTarget","async","arr","responses","map","item","response","fetch","ok","Error","json","Promise","allSettled","filter","status","value","$511287ff32316ba1$var$getCountries","getAll","trim","then","capitals","capital","weatherService","BASE_URL","API_KEY","city","params","URLSearchParams","key","q","lang","statusText","$511287ff32316ba1$var$getWeather","innerHTML","current","temp_c","condition","text","icon","location","country","name","join","$511287ff32316ba1$var$createMarkup","catch","e","console","log","finally","markup","reset"],"version":3,"file":"index.5154ca1c.js.map"}